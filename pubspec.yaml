name: first_app
description: A new Flutter project.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.1.3 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.

dependencies:
  flutter:
    sdk: flutter
  firebase_core: ^2.21.0
  cloud_firestore: ^4.12.2
  firebase_auth: ^4.12.1
  firebase_storage: ^11.4.1
  fluttertoast: ^8.2.4
  cupertino_icons: ^1.0.2
  font_awesome_flutter: ^10.6.0
  google_sign_in: ^6.1.5
  google_fonts: ^6.1.0
  transparent_image: ^2.0.1

# firebase_core: ^2.21.0
# This is the core Firebase library. It is required to use any Firebase service in your Flutter application.
# It provides the basic Firebase setup and initialization functionality.

# cloud_firestore: ^4.12.2
# This is the Flutter plugin for Cloud Firestore, a NoSQL document database built for automatic scaling,
# high performance, and ease of application development. It allows you to work with Firestore from a Flutter app.

# firebase_auth: ^4.12.1
# This is the Flutter plugin for Firebase Authentication. It provides a simple, secure authentication system
# that supports login with email & password, Facebook, Google, Twitter, and more. It can be used to create,
# manage, and authenticate users in your Flutter app.

# firebase_storage: ^11.4.1
# This is the Flutter plugin for Firebase Cloud Storage, a powerful, simple, and cost-effective object storage service.
# It allows you to store and retrieve user-generated content like images, audio, and video directly from the Flutter app.

# fluttertoast: ^8.2.4
# This is a Flutter plugin for Toasts and Snackbars. It allows you to show Toasts and Snackbars in your Flutter app.

# The following adds the Cupertino Icons font to your application.
# Use with the CupertinoIcons class for iOS style icons.

# font_awesome_flutter: ^10.6.0
# This is a Flutter plugin for Font Awesome 5. It allows you to use Font Awesome 5 icons in your Flutter app.
# It provides a set of over 1500 icons in 5 different styles.
# It also provides a set of helper widgets that allow you to use the Font Awesome 5 icons in your Flutter app.

# google_sign_in: ^6.1.5
# This is a Flutter plugin for Google Sign-In. It allows you to authenticate users with Google.
# It also provides a set of helper widgets that allow you to use the Google Sign-In functionality in your Flutter app.
# It is required to use Google Sign-In in your Flutter app.

# google_fonts: ^6.1.0
# This is a Flutter plugin for Google Fonts. It allows you to use any of the 977 fonts from fonts.google.com in your Flutter app.
# It also provides a set of helper widgets that allow you to use the Google Fonts in your Flutter app.

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
